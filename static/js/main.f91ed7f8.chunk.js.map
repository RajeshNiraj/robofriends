{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","onChange","type","placeholder","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOA0BeA,EAxBF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,SACDC,IAAG,+BAA0BH,EAA1B,cACX,8BACI,6BAAKF,MAET,4BAAIC,QCKDK,EAZE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACA,cAAC,WAAD,UACKA,EAAOC,KAAI,SAACC,EAAKC,GACd,OAAO,cAAC,EAAD,CAAcR,GAAIO,EAAKP,GAC1BF,KAAMS,EAAKT,KACXC,MAAOQ,EAAKR,OAFES,SCGfC,EARG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKT,UAAU,MAAf,SACI,uBAAOU,SAAUD,EAAcT,UAAU,mCAAmCW,KAAK,SAASC,YAAY,qBCMnGC,EATA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SACZC,OAAQ,kBAAmBC,OAAQ,SAD/C,SAEKJ,EAAMK,Y,OCeJC,E,4CAlBX,WAAYN,GAAO,IAAD,6BACd,EAAKO,MAAQ,CACTC,UAAW,GAFD,e,qDAMlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAW,M,oBAG/B,WACI,OAAGG,KAAKJ,MAAMC,SACH,mDAEJG,KAAKX,MAAMK,a,GAfEQ,aCgDbC,G,wDA1CX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAcD,EAAME,OAAOC,SAb3C,EAAKZ,MAAQ,CACTjB,OAAQ,GACR2B,YAAa,IAJR,E,qDAQb,WAAqB,IAAD,OAChBG,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEtB,OAASkC,S,oBAOhD,WACI,MAA+Bb,KAAKJ,MAA7BjB,EAAP,EAAOA,OAAS2B,EAAhB,EAAgBA,YACVQ,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM5C,KAAK6C,cACbC,SAASZ,EAAYW,kBAG9B,OAAQtC,EAAOwC,OAIP,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAgBgB,KAAKI,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAUmC,WARpC,gD,GA3BMZ,cCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.f91ed7f8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({ name, email, id }) => {    \r\n    return(\r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt=\"robots\" \r\n                    src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n            </div>\r\n            <p>{email}</p>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n// class Card extends Component {\r\n//     render(){\r\n//         return(\r\n//             <div>\r\n\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default Card;","import React,{Fragment} from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {          \r\n    return(\r\n    <Fragment>\r\n        {robots.map((user,i) => {\r\n            return <Card key={i} id={user.id} \r\n                name={user.name} \r\n                email={user.email}/>\r\n        })}\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input onChange={searchChange} className=\"pa3 ba b--green bg-lightest-blue\" type=\"search\" placeholder=\"search robots\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) =>{\r\n    return(\r\n        <div style={{overflowY: 'scroll', \r\n                    border: '1px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React , {Component} from \"react\";\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(props){\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError : true});\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>There is an error</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React,{Component} from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots : users}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield : event.target.value });\r\n    }\r\n\r\n    render(){\r\n        const {robots , searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase()\r\n                .includes(searchfield.toLowerCase());\r\n        })\r\n\r\n        return !robots.length ?\r\n            <h1>Loading...</h1>\r\n            :\r\n            (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f2\">RoboFriends</h1>\r\n                    <SearchBox searchChange = {this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardList robots = {filteredRobots}/>\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>            \r\n            )\r\n        }\r\n   }\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(  \n    <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}